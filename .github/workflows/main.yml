name: Build with PyInstaller

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller        
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm --onedir --windowed --icon "src/assets/favicon/app_icon.ico" --name "yasb" --contents-directory "libs" --disable-windowed-traceback --noupx --clean --log-level=WARN --optimize "1" --version-file "src/version.txt" --bootloader-ignore-signals --hidden-import "core.widgets.yasb.power_menu" --hidden-import "core.widgets.yasb.volume" --hidden-import "core.widgets.yasb.weather" --hidden-import "core.widgets.yasb.memory" --hidden-import "core.widgets.yasb.cpu" --hidden-import "core.widgets.yasb.active_window" --hidden-import "core.widgets.yasb.applications" --hidden-import "core.widgets.yasb.battery" --hidden-import "core.widgets.yasb.clock" --hidden-import "core.widgets.yasb.custom" --hidden-import "core.widgets.yasb.github" --hidden-import "core.widgets.yasb.media" --hidden-import "core.widgets.yasb.wallpapers" --hidden-import "core.widgets.yasb.traffic" --hidden-import "core.widgets.komorebi.active_layout" --hidden-import "core.widgets.komorebi.workspaces" --hidden-import "core.widgets.yasb.wifi" --add-data "src/assets;assets/"  "src/main.py"
    - name: Compress artifact
      run: |
        Compress-Archive -Path dist/yasb -DestinationPath dist/yasb_win.zip

    - name: Get app version
      id: get_version
      run: |
        $version = (Select-String -Path "src/version.txt" -Pattern 'filevers=\(([0-9, ]+)\)' | ForEach-Object { $_.Matches.Groups[1].Value.Trim() -replace ' ', '' -replace ',', '.' })
        echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Create changelog text
      id: changelog
      uses: loopwerk/tag-changelog@v1
      with:
        token: ${{ secrets.PAT }}

    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        artifacts: dist/yasb_win.zip
        tag: v${{ env.VERSION }}
        name: Release ${{ env.VERSION }}
        body: |
          Changelog for version ${{ env.VERSION }}
          ${{ steps.changelog.outputs.changes }}
        draft: true
        prerelease: false

    - name: Upload Release Asset
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        file: "dist/yasb_win.zip"
        release_id: ${{ steps.create_release.outputs.id }}
        update_release_body: ${{ github.ref }}
        update_release_body_append: "true"
        draft: true
        overwrite: true
        prerelease: false
